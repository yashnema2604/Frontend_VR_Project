{"version":3,"file":"static/js/580.3f2b569a.chunk.js","mappings":"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","sources":["components/SearchResultVideoCard.js","components/SearchResultVideoContainer.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { closeButtonList } from \"../utils/appSlice\";\nimport { dateDiff, numberFormatter, vidDuration } from \"../utils/helper\";\n\nconst SearchResultVideoCard = ({ info, channelThumbnail }) => {\n  const { snippet, statistics, contentDetails } = info;\n  const { channelTitle, title, thumbnails } = snippet;\n  const dispatch = useDispatch();\n\n  console.log(channelThumbnail, \"CHANNEL THUMBNAILS\");\n\n  useEffect(() => {\n    dispatch(closeButtonList());\n  });\n\n  const renderDescription = () => {\n    const { description } = info.snippet;\n    const maxLength = 110;\n    if (description.length > maxLength) {\n      return `${description.slice(0, maxLength)}...`;\n    }\n    return description;\n  };\n\n  const renderDuration = () => {\n    const { duration } = info.contentDetails;\n    return vidDuration(duration);\n  };\n\n  const renderViewCount = () => {\n    const { viewCount } = info.statistics;\n    return numberFormatter.format(viewCount);\n  };\n\n  const renderPublishedAt = () => {\n    const { publishedAt } = info.snippet;\n    return dateDiff(publishedAt);\n  };\n\n  return (\n    <div className=\"sm:flex m-4\">\n      <div className=\"\">\n        <img\n          src={\n            thumbnails?.maxres === undefined\n              ? thumbnails?.high?.url\n              : thumbnails?.maxres?.url\n          }\n          alt=\"thumbnail\"\n          className=\"rounded-2xl sm:min-w-[340px] sm:max-w-[340px] hover:shadow-xl \"\n        />\n        <p className=\" px-1  top-[-20px] opacity-80 bg-black text-white rounded-sm text-xs font-bold w-max float-right relative right-1\">\n          {renderDuration()}\n        </p>\n      </div>\n      <div className=\"px-4 pt-2 text-xs\">\n        <h2 className=\"font-bold sm:text-base\">{title}</h2>\n        <ul className=\"\">\n          <li className=\"text-gray-600\">\n            <span> {renderViewCount()} views</span>\n            <span>\n              {\" \"}\n              <span className=\"font-bold\">Â·</span> {renderPublishedAt()}\n            </span>\n          </li>\n        </ul>\n        <div className=\"flex items-center sm:py-3\">\n          <img\n            className=\"w-7 h-7 rounded-full mr-2\"\n            src={channelThumbnail}\n            alt=\"channel-thumbnail\"\n          />\n          <div className=\"text-xs sm:font-bold\">{channelTitle}</div>\n        </div>\n        <div className=\"text-xs hidden md:block\">{renderDescription()}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResultVideoCard;\n","import React, { useState, useEffect } from \"react\";\nimport { useSearchParams, Link } from \"react-router-dom\";\nimport SearchResultVideoCard from \"./SearchResultVideoCard\";\nimport { useSelector } from \"react-redux\";\nimport {\n  YOUTUBE_SEARCH_VIDEO_API,\n  YOUTUBE_SEARCH_VIDEO_ID_API,\n  YOUTUBE_CHANNEL_DETAILS_API,\n} from \"../utils/constants\";\n\nconst SearchResultVideoContainer = () => {\n  let [searchParams] = useSearchParams();\n  const searchQuery = searchParams.get(\"search_query\");\n  const [videoIdList, setVideoIdList] = useState([]);\n  const [searchVideosResult, setSearchVideosResult] = useState([]);\n  const [nextToken, setNextToken] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [channelIdList, setChannelIdList] = useState([]);\n  const [channelThumbnailList, setChannelThumbnailList] = useState([]);\n  const isMenuOpen = useSelector((store) => store.app.isMenuOpen);\n\n  /** Reset states when search query changes **/\n  useEffect(() => {\n    setSearchVideosResult([]);\n    setVideoIdList([]);\n    setNextToken(\"\");\n    setPage(1);\n  }, [searchQuery]);\n\n  /** Get video Id **/\n  useEffect(() => {\n    getSearchVideosWithId();\n    console.log(\"CALL API -- 1\");\n  }, [searchQuery, page]);\n\n  const getSearchVideosWithId = async () => {\n    const data = await fetch(\n      YOUTUBE_SEARCH_VIDEO_ID_API(searchQuery, nextToken)\n    );\n    const json = await data.json();\n    setVideoIdList(\n      json.items\n        ?.map((searchVideo) => searchVideo?.id?.videoId)\n        .filter((item) => item !== undefined)\n    );\n\n    setNextToken(json.nextPageToken);\n  };\n\n  /** Get video with details **/\n  useEffect(() => {\n    getSearchVideos();\n    console.log(\"CALL API -- 2\");\n  }, [videoIdList]);\n\n  const getSearchVideos = async () => {\n    const data = await fetch(YOUTUBE_SEARCH_VIDEO_API(videoIdList.toString()));\n    const json = await data.json();\n    setSearchVideosResult([...searchVideosResult, ...json.items]);\n    setChannelIdList(json.items?.map((video) => video?.snippet?.channelId));\n  };\n\n  /** Get channel thumbnail */\n  useEffect(() => {\n    if (channelIdList.length > 0) {\n      getChannelDetails();\n    }\n  }, [channelIdList]);\n\n  const getChannelDetails = async () => {\n    const data = await fetch(\n      YOUTUBE_CHANNEL_DETAILS_API(channelIdList.toString())\n    );\n    const json = await data.json();\n    setChannelThumbnailList([\n      ...channelThumbnailList,\n      ...json.items?.map((channel) => channel?.snippet?.thumbnails?.high?.url),\n    ]);\n  };\n\n  /** Is scroll bottom ? **/\n  useEffect(() => {\n    function handleScroll() {\n      const isBottom =\n        window.innerHeight + window.scrollY >=\n        document.documentElement.scrollHeight;\n\n      if (isBottom) {\n        setPage((prevPage) => prevPage + 1);\n      }\n    }\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  return (\n    <div\n      className={\n        isMenuOpen ? \"pointer-events-none blur-3xl fixed\" : \"sm:ml-[10%]\"\n      }\n    >\n      {searchVideosResult.map((video, index) => (\n        <Link key={video?.id + index} to={\"/watch?v=\" + video?.id}>\n          <SearchResultVideoCard\n            info={video}\n            channelThumbnail={channelThumbnailList[index]}\n          />\n        </Link>\n      ))}\n    </div>\n  );\n};\n\nexport default SearchResultVideoContainer;\n"],"names":["info","channelThumbnail","snippet","channelTitle","statistics","contentDetails","title","thumbnails","dispatch","useDispatch","console","log","useEffect","closeButtonList","className","src","undefined","maxres","high","url","alt","duration","vidDuration","renderDuration","viewCount","numberFormatter","renderViewCount","publishedAt","dateDiff","renderPublishedAt","description","length","slice","renderDescription","useSearchParams","searchQuery","get","useState","videoIdList","setVideoIdList","searchVideosResult","setSearchVideosResult","nextToken","setNextToken","page","setPage","channelIdList","setChannelIdList","channelThumbnailList","setChannelThumbnailList","isMenuOpen","useSelector","store","app","getSearchVideosWithId","fetch","YOUTUBE_SEARCH_VIDEO_ID_API","data","json","items","map","searchVideo","id","videoId","filter","item","nextPageToken","getSearchVideos","YOUTUBE_SEARCH_VIDEO_API","toString","video","channelId","getChannelDetails","YOUTUBE_CHANNEL_DETAILS_API","channel","handleScroll","window","innerHeight","scrollY","document","documentElement","scrollHeight","prevPage","addEventListener","removeEventListener","index","to"],"sourceRoot":""}